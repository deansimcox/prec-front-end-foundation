
// =============================
// 
//		VEX MODAL VARS AND MIXINS
//
// =============================

@mixin vex-keyframes($name) {
	@keyframes #{$name} {
		@content;
	}
}

@mixin vex-animation($animation) {
	animation: $animation;
	-webkit-backface-visibility: hidden;
}

@mixin vex-transform($transform) {
	transform: $transform;
}

@mixin vex-preserve-3d {
	transform-style: preserve-3d;
}

// copied from Compass (https://github.com/Compass/compass) on the 21st of January 2015:

$prefix-context: null;
$current-prefix: null;
$critical-usage-threshold: 0.01 !default;
$default-has-layout-approach: zoom !default;
$has-layout-support-threshold: $critical-usage-threshold !default;

// full mixin: https://github.com/Compass/compass/blob/stable/core/stylesheets/compass/_support.scss
@mixin box-sizing($box-model) {
	box-sizing: $box-model;
}

// full mixin: https://github.com/Compass/compass/blob/stable/core/stylesheets/compass/css3/_box-shadow.scss
@mixin box-shadow($shadow...) {
	box-shadow: $shadow;
}

// full mixin: https://github.com/Compass/compass/blob/stable/core/stylesheets/compass/css3/_border-radius.scss
@mixin border-radius($radius) {
	border-radius: $radius;
}

// full mixin: https://github.com/Compass/compass/blob/stable/core/stylesheets/compass/css3/_transform.scss
@mixin perspective($p) {
	perspective: $p;
}

// full mixin: https://github.com/Compass/compass/blob/stable/core/stylesheets/compass/css3/_transform.scss
@mixin perspective-origin($origin: 50%) {
	perspective-origin: $origin;
}

// full mixin: https://github.com/Compass/compass/blob/stable/core/stylesheets/compass/_support.scss
@mixin appearance($appearance) {
	$appearance: unquote($appearance);
	appearance: $appearance;
}

@mixin has-layout($approach: $default-has-layout-approach) {
	@if support-legacy-browser("ie", "7", $threshold: $has-layout-support-threshold) {
		@if $approach == zoom {
			@include has-layout-zoom;
		}
		@else if $approach == block {
			@include has-layout-block;
		}
		@else {
			@warn "Unknown has-layout approach: #{$approach}";
			@include has-layout-zoom;
		}
	}
}

@mixin has-layout-zoom {
	@if support-legacy-browser("ie", "7", $threshold: $has-layout-support-threshold) {
		*zoom: 1;
	}
}

@mixin pie-clearfix {
	&:after {
		content: "";
		display: table;
		clear: both;
	}
	@include has-layout;
}

// full mixin: https://github.com/Compass/compass/blob/stable/core/stylesheets/compass/_support.scss
@function support-legacy-browser($browser, $min-version, $max-version: null, $threshold: $critical-usage-threshold) {
	@return true;
}

// Overlay/content animations

@mixin keyframes-vex-fadein {
	@include vex-keyframes("vex-fadein") {
		0% {
			opacity: 0;
		}
		100% {
			opacity: 1;
		}
	}
}

@mixin keyframes-vex-fadeout {
	@include vex-keyframes("vex-fadeout") {
		0% {
			opacity: 1;
		}
		100% {
			opacity: 0;
		}
	}
}

// Content animations

@mixin keyframes-vex-flyin {
	@include vex-keyframes("vex-flyin") {
		0% {
			opacity: 0;
			@include vex-transform(translateY(-40px));
		}
		100% {
			opacity: 1;
			@include vex-transform(translateY(0));
		}
	}
}

@mixin keyframes-vex-flyout {
	@include vex-keyframes("vex-flyout") {
		0% {
			opacity: 1;
			@include vex-transform(translateY(0));
		}
		100% {
			opacity: 0;
			@include vex-transform(translateY(-40px));
		}
	}
}

@mixin keyframes-vex-dropin {
	@include vex-keyframes("vex-dropin") {
		// We start at 0 first and, while hidden
		// move to -800px, where the animation
		// really begins. This was necessary because
		// otherwise, when starting the animation
		// at -800px, the browser scrolls up 800px
		// to try to display this object positioned
		// above the page.
		// https://github.com/HubSpot/vex/issues/21
		0% {
			@include vex-transform(translateY(0));
			opacity: 0;
		}
		1% {
			@include vex-transform(translateY(-800px));
			opacity: 0;
		}
		// Real animation begins here
		2% {
			@include vex-transform(translateY(-800px));
			opacity: 1;
		}
		100% {
			@include vex-transform(translateY(0));
			opacity: 1;
		}
	}
}

@mixin keyframes-vex-dropout {
	@include vex-keyframes("vex-dropout") {
		0% {
			@include vex-transform(translateY(0));
		}
		100% {
			@include vex-transform(translateY(-800px));
		}
	}
}

@mixin keyframes-vex-slideup {
	@include vex-keyframes("vex-slideup") {
		// We start at 0 first and, while hidden
		// move to -800px, where the animation
		// really begins. This was necessary because
		// otherwise, when starting the animation
		// at -800px, the browser scrolls up 800px
		// to try to display this object positioned
		// above the page.
		// https://github.com/HubSpot/vex/issues/21
		0% {
			@include vex-transform(translateY(0));
			opacity: 0;
		}
		1% {
			@include vex-transform(translateY(800px));
			opacity: 0;
		}
		// Real animation begins here
		2% {
			@include vex-transform(translateY(800px));
			opacity: 1;
		}
		100% {
			@include vex-transform(translateY(0));
			opacity: 1;
		}
	}
}

@mixin keyframes-vex-slidedown {
	@include vex-keyframes("vex-slidedown") {
		0% {
			@include vex-transform(translateY(0));
		}
		100% {
			@include vex-transform(translateY(800px));
		}
	}
}

@mixin keyframes-vex-flipin-horizontal {
	@include vex-keyframes("vex-flipin-horizontal") {
		0% {
			opacity: 0;
			@include vex-transform(rotateY(-90deg));
		}
		100% {
			opacity: 1;
			@include vex-transform(rotateY(0deg));
		}
	}
}

@mixin keyframes-vex-flipout-horizontal {
	@include vex-keyframes("vex-flipout-horizontal") {
		0% {
			opacity: 1;
			@include vex-transform(rotateY(0deg));
		}
		100% {
			opacity: 0;
			@include vex-transform(rotateY(90deg));
		}
	}
}

// Spinner animations

@mixin keyframes-vex-rotation {
	@include vex-keyframes("vex-rotation") {
		0% {
			@include vex-transform(rotate(0deg));
		}
		100% {
			@include vex-transform(rotate(359deg));
		}
	}
}

// Button animations

@mixin keyframes-vex-pulse {
	@include vex-keyframes("vex-pulse") {
		0% {
			@include box-shadow(inset 0 0 0 300px transparent);
		}
		70% {
			@include box-shadow(inset 0 0 0 300px rgba(255, 255, 255, 0.25));
		}
		100% {
			@include box-shadow(inset 0 0 0 300px transparent);
		}
	}
}






// =============================
// 
//		BASE VEX MODAL STYLES
//
// =============================

@include keyframes-vex-fadein;
@include keyframes-vex-fadeout;
@include keyframes-vex-rotation;

.vex, .vex *, .vex *:before, .vex *:after {
	@include box-sizing(border-box);
}

.vex {
	position: fixed;
	overflow: auto;
	-webkit-overflow-scrolling: touch;
	z-index: 1111;
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
	padding: 15px;
}

.vex-scrollbar-measure {
	position: absolute;
	top: -9999px;
	width: 50px;
	height: 50px;
	overflow: scroll;
}

// IE
.vex-overlay {
	background: black;
	filter: alpha(opacity = 40);
	-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=40)";
}

.vex-overlay {
	@include vex-animation(vex-fadein 0.5s);
	position: fixed;
	background: rgba(0, 0, 0, 0.75);
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
	.vex-closing & {
		@include vex-animation(vex-fadeout 0.5s);
	}
}

.vex-content {
	@include vex-animation(vex-fadein 0.5s);
	background: white;
	.vex-closing & {
		@include vex-animation(vex-fadeout 0.5s);
	}
}

.vex-close:before {
	font-family: Arial, sans-serif;
	content: "\00D7";
}

.vex-dialog-form {
	margin: 0;
}

.vex-dialog-button {
	text-rendering: optimizeLegibility;
	@include appearance(none);
	cursor: pointer;
	-webkit-tap-highlight-color: transparent;
}

.vex-loading-spinner {
	@include vex-animation(vex-rotation 0.7s linear infinite);
	@include box-shadow(0 0 1em rgba(0, 0, 0, 0.1));
	position: fixed;
	z-index: 1112;
	margin: auto;
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
	height: 2em;
	width: 2em;
	background: white;
}

// Prevent background scrolling when vex is open
// https://github.com/HubSpot/vex/issues/18
body.vex-open {
	overflow: hidden;
}








// =============================
// 
//		VEX MODAL THEMES
//
// =============================

@include keyframes-vex-flyin;

@include keyframes-vex-flyout;

@include keyframes-vex-pulse;

$blue: #3288e6;

.vex-default {
	padding-top: 160px;
	padding-bottom: 160px;
	&.vex-closing .vex-content {
		@include vex-animation(vex-flyout 0.5s);
	}
	.vex-content {
		@include vex-animation(vex-flyin 0.5s);
	}
	.vex-content {
		@include border-radius(5px);
		font-family: "Helvetica Neue", sans-serif;
		background: #f0f0f0;
		padding: 1em;
		position: relative;
		margin: 0 auto;
		max-width: 100%;
		width: 960px;
	}
	.vex-close {
		@include border-radius(5px);
		position: absolute;
		top: 0;
		right: 0;
		cursor: pointer;
		&:before {
			@include border-radius(3px);
			position: absolute;
			content: "\00D7";
			font-size: 26px;
			font-weight: normal;
			line-height: 31px;
			height: 30px;
			width: 30px;
			text-align: center;
			top: 3px;
			right: 3px;
			color: #bbbbbb;
			background: transparent;
		}
		&:hover:before, &:active:before {
			color: #777777;
			background: #e0e0e0;
		}
	}
	.vex-dialog-form {
		.vex-dialog-message {
			margin-bottom: 0.5em;
		}
		.vex-dialog-input {
			margin-bottom: 1em;
			textarea, input[type="date"], input[type="datetime"], input[type="datetime-local"], input[type="email"], input[type="month"], input[type="number"], input[type="password"], input[type="search"], input[type="tel"], input[type="text"], input[type="time"], input[type="url"], input[type="week"] {
				@include border-radius(3px);
				background: white;
				width: 100%;
				padding: 0.25em 0.67em;
				border: 0;
				font-family: inherit;
				font-weight: inherit;
				font-size: inherit;
				min-height: 2.5em;
				margin: 0 0 0.25em;
				&:focus {
					@include box-shadow(inset 0 0 0 2px lighten($blue, 20%));
					outline: none;
				}
			}
		}
		.vex-dialog-buttons {
			@include pie-clearfix;
		}
	}
	.vex-dialog-button {
		@include border-radius(3px);
		border: 0;
		float: right;
		margin: 0 0 0 0.5em;
		font-family: inherit;
		text-transform: uppercase;
		letter-spacing: 0.1em;
		font-size: 0.8em;
		line-height: 1em;
		padding: 0.75em 2em;
		&.vex-last {
			margin-left: 0;
		}
		&:focus {
			@include vex-animation(vex-pulse 1.1s infinite);
			outline: none;
			// vex-pulse uses -webkit-filter which
			// doesn't play so nice in mobile webkit
			@media (max-width: 568px) {
				@include vex-animation(none);
			}
		}
		&.vex-dialog-button-primary {
			background: $blue;
			color: white;
		}
		&.vex-dialog-button-secondary {
			background: #e0e0e0;
			color: #777777;
		}
	}
}

.vex-loading-spinner.vex-default {
	@include box-shadow(0 0 0 0.5em #f0f0f0, 0 0 1px 0.5em rgba(0, 0, 0, 0.3));
	@include border-radius(100%);
	background: #f0f0f0;
	border: 0.2em solid transparent;
	border-top-color: #bbbbbb;
	top: -1.1em;
	bottom: auto;
}
